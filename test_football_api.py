#!/usr/bin/env python3
"""
Script para testar a API Football-Data.org
Verifica se a chave est√° funcionando e mostra informa√ß√µes da conta
"""

import requests
import json
from django.conf import settings
import os
import sys
from pathlib import Path

# Configurar Django
project_dir = Path(__file__).parent
sys.path.insert(0, str(project_dir))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bolao_config.settings')

import django
django.setup()

def test_football_api():
    """Testa a API Football-Data.org"""
    
    api_key = settings.FOOTBALL_DATA_API_KEY
    base_url = "https://api.football-data.org/v4"
    
    headers = {
        'X-Auth-Token': api_key,
        'User-Agent': 'BolaoPython/1.0'
    }
    
    print("üèà TESTE DA API FOOTBALL-DATA.ORG")
    print("=" * 60)
    print(f"üîë API Key: {api_key}")
    print(f"üåê Base URL: {base_url}")
    print()
    
    # Teste 1: Informa√ß√µes da conta
    print("üìä 1. INFORMA√á√ïES DA CONTA")
    print("-" * 30)
    try:
        response = requests.get(f"{base_url}/", headers=headers, timeout=10)
        
        print(f"Status Code: {response.status_code}")
        print(f"Headers: {dict(response.headers)}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ API funcionando!")
            print(f"Dados: {json.dumps(data, indent=2)}")
        elif response.status_code == 403:
            print("‚ùå Chave inv√°lida ou sem permiss√£o")
        elif response.status_code == 429:
            print("‚ö†Ô∏è Limite de requisi√ß√µes atingido")
        else:
            print(f"‚ùå Erro: {response.status_code}")
            print(f"Resposta: {response.text}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erro de conex√£o: {e}")
    
    print()
    
    # Teste 2: Listar competi√ß√µes
    print("üèÜ 2. COMPETI√á√ïES DISPON√çVEIS")
    print("-" * 30)
    try:
        response = requests.get(f"{base_url}/competitions", headers=headers, timeout=10)
        
        print(f"Status Code: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            competitions = data.get('competitions', [])
            
            print(f"‚úÖ {len(competitions)} competi√ß√µes encontradas!")
            print("\nüìã Principais competi√ß√µes:")
            
            # Mostrar as primeiras 5 competi√ß√µes
            for comp in competitions[:5]:
                area = comp.get('area', {}).get('name', 'N/A')
                name = comp.get('name', 'N/A')
                code = comp.get('code', 'N/A')
                print(f"   ‚Ä¢ {name} ({code}) - {area}")
                
            if len(competitions) > 5:
                print(f"   ... e mais {len(competitions) - 5} competi√ß√µes")
                
        elif response.status_code == 403:
            print("‚ùå Sem permiss√£o para acessar competi√ß√µes")
        else:
            print(f"‚ùå Erro: {response.status_code}")
            print(f"Resposta: {response.text}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erro de conex√£o: {e}")
    
    print()
    
    # Teste 3: Premier League (se dispon√≠vel)
    print("‚öΩ 3. TESTE PREMIER LEAGUE")
    print("-" * 30)
    try:
        # Premier League ID: 2021
        response = requests.get(f"{base_url}/competitions/PL", headers=headers, timeout=10)
        
        print(f"Status Code: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ Premier League acess√≠vel!")
            print(f"Nome: {data.get('name', 'N/A')}")
            print(f"√Årea: {data.get('area', {}).get('name', 'N/A')}")
            print(f"Temporada atual: {data.get('currentSeason', {}).get('startDate', 'N/A')}")
            
        elif response.status_code == 403:
            print("‚ùå Premier League n√£o dispon√≠vel no plano atual")
        elif response.status_code == 404:
            print("‚ùå Premier League n√£o encontrada")
        else:
            print(f"‚ùå Erro: {response.status_code}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erro de conex√£o: {e}")
    
    print()
    
    # Informa√ß√µes sobre limites
    print("üìà 4. INFORMA√á√ïES DE LIMITE")
    print("-" * 30)
    print("‚ÑπÔ∏è Plano gratuito Football-Data.org:")
    print("   ‚Ä¢ 10 requisi√ß√µes por minuto")
    print("   ‚Ä¢ Competi√ß√µes limitadas")
    print("   ‚Ä¢ Dados b√°sicos dispon√≠veis")
    print()
    print("üí° Para mais recursos:")
    print("   ‚Ä¢ https://www.football-data.org/pricing")
    
    print()
    print("=" * 60)
    print("üéØ Teste da API conclu√≠do!")

if __name__ == "__main__":
    test_football_api()
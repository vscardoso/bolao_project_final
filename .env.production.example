# ========================================
# CONFIGURAÇÕES DE PRODUÇÃO - TEMPLATE
# ========================================
# INSTRUÇÕES PARA PRODUÇÃO:
# 1. Copie este arquivo para .env (no servidor de produção)
# 2. Preencha TODAS as variáveis com valores reais
# 3. Use o settings_production.py ao rodar o Django
# 4. NUNCA commite arquivos .env no Git

# ========================================
# DJANGO CORE
# ========================================

# Ambiente de produção
DJANGO_ENV=production

# SECRET_KEY: Gere uma NOVA chave única para produção
# Comando: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=2te(&kvx*z1*sfm4g_ia0gq5#@ts3#r$r-u&1t*0bm*3jyjx!a

# DEBUG: SEMPRE False em produção
DEBUG=False

# ALLOWED_HOSTS: Seu domínio real (separados por vírgula)
# Exemplo: ALLOWED_HOSTS=bolaoonline.com,www.bolaoonline.com
ALLOWED_HOSTS=seu-dominio.com,www.seu-dominio.com

# URL do site em produção
SITE_URL=https://seu-dominio.com

# ========================================
# BANCO DE DADOS (RDS/Managed MySQL)
# ========================================

DB_ENGINE=django.db.backends.mysql
DB_NAME=bolao_online_prod
DB_USER=bolao_user_prod
DB_PASSWORD=SENHA_SUPER_FORTE_AQUI_MIN_20_CHARS
DB_HOST=seu-rds-endpoint.region.rds.amazonaws.com
DB_PORT=3306

# ========================================
# EMAIL (SMTP Produção)
# ========================================

# Opção 1: SendGrid
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.sendgrid.net
EMAIL_PORT=587
EMAIL_HOST_USER=apikey
EMAIL_HOST_PASSWORD=SUA_API_KEY_SENDGRID
EMAIL_USE_TLS=True
DEFAULT_FROM_EMAIL=naoresponda@seu-dominio.com

# Opção 2: AWS SES
# EMAIL_HOST=email-smtp.us-east-1.amazonaws.com
# EMAIL_PORT=587
# EMAIL_HOST_USER=SEU_SMTP_USERNAME_SES
# EMAIL_HOST_PASSWORD=SUA_SMTP_PASSWORD_SES

# Email do admin para receber erros
ADMIN_EMAIL=admin@seu-dominio.com

# ========================================
# APIS EXTERNAS
# ========================================

# Football-Data.org API (Chave de produção)
FOOTBALL_API_KEY=SUA_CHAVE_API_PRODUCAO_AQUI

# ========================================
# AWS S3 (Arquivos Estáticos e Mídia)
# ========================================

# AWS Credentials
AWS_ACCESS_KEY_ID=SUA_ACCESS_KEY_ID
AWS_SECRET_ACCESS_KEY=SUA_SECRET_ACCESS_KEY
AWS_STORAGE_BUCKET_NAME=bolao-online-static
AWS_S3_REGION_NAME=us-east-1
AWS_S3_CUSTOM_DOMAIN=seu-bucket.s3.amazonaws.com

# ========================================
# REDIS (Cache e Celery)
# ========================================

# Redis URL (se usar cache ou Celery)
REDIS_URL=redis://seu-redis-host:6379/0

# Celery Broker (para tasks assíncronas)
CELERY_BROKER_URL=redis://seu-redis-host:6379/1

# ========================================
# SENTRY (Error Tracking)
# ========================================

# Sentry DSN (obtenha em sentry.io)
SENTRY_DSN=https://seu-sentry-dsn@sentry.io/projeto-id

# ========================================
# SEGURANÇA (HTTPS/SSL)
# ========================================

# Estas devem ser True em produção com HTTPS
CSRF_COOKIE_SECURE=True
SESSION_COOKIE_SECURE=True
SECURE_HSTS_SECONDS=31536000
SECURE_SSL_REDIRECT=True

# ========================================
# SESSÃO
# ========================================

INACTIVITY_TIMEOUT=30
SESSION_COOKIE_AGE=7200

# ========================================
# ARQUIVOS ESTÁTICOS (S3/CDN)
# ========================================

# Se usar S3
STATIC_URL=https://seu-cdn.cloudfront.net/static/
MEDIA_URL=https://seu-cdn.cloudfront.net/media/

# Se usar WhiteNoise (arquivos locais)
# STATIC_URL=/static/
# STATIC_ROOT=/var/www/bolao/staticfiles/
# MEDIA_URL=/media/
# MEDIA_ROOT=/var/www/bolao/media/

# ========================================
# FERRAMENTAS
# ========================================

CRISPY_ALLOWED_TEMPLATE_PACKS=bootstrap5
CRISPY_TEMPLATE_PACK=bootstrap5

# ========================================
# COMANDOS PARA USAR ESTE ARQUIVO
# ========================================

# 1. Exportar variável de ambiente para usar settings_production:
#    export DJANGO_SETTINGS_MODULE=bolao_config.settings_production

# 2. Ou rodar diretamente:
#    python manage.py runserver --settings=bolao_config.settings_production

# 3. Gunicorn (produção):
#    gunicorn bolao_config.wsgi:application --env DJANGO_SETTINGS_MODULE=bolao_config.settings_production

# 4. Migrations:
#    python manage.py migrate --settings=bolao_config.settings_production

# 5. Collectstatic:
#    python manage.py collectstatic --noinput --settings=bolao_config.settings_production
